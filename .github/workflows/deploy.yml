name: Build, Push Docker Image, and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get_next_version:
    runs-on: ubuntu-latest
    name: Generate release version and tag
    outputs:
      nextVersion: ${{ steps.semver.outputs.nextVersion }}
      oldVersion: ${{ steps.semver.outputs.oldVersion }}
      prerelease: ${{ steps.semver.outputs.prerelease }}
      extract_branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Magic Semver Action
        id: semver
        uses: mehdi-ra/semversion@v0.1.1
        with:
          addDate: 'true'
        
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: get_next_version
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.get_next_version.outputs.nextVersion }}
          labels: ${{ steps.meta.outputs.labels }}
          file: "./Dockerfile.cloud"

  create_github_release:
    runs-on: ubuntu-latest
    needs: [get_next_version, build-and-push-image]
    permissions:
      contents: write
    if: needs.get_next_version.outputs.oldVersion != needs.get_next_version.outputs.nextVersion
    steps:
      - uses: actions/checkout@v2
      - uses: softprops/action-gh-release@v1
        with:
          name:
          tag_name: '${{ needs.get_next_version.outputs.nextVersion }}'
          generate_release_notes: true
          prerelease: '${{ needs.get_next_version.outputs.prerelease }}'
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_to_swarm:
    runs-on: ubuntu-latest
    needs: [build-and-push-image, get_next_version]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate swarm service file with version
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: ".docker/swarm/core-service-${{ needs.get_next_version.outputs.extract_branch }}.j2"
          output_file: service.yml
          strict: true
          variables: |
            image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.get_next_version.outputs.nextVersion }}

      - name: Copy service to target server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          overwrite: true
          key: ${{ secrets.DEPLOY_KEY }}
          source: './service.yml'
          target: '/opt/${{ github.repository }}/'

      - name: Deploy service via ssh
        uses: appleboy/ssh-action@v1.0.3
        env:
          APPTOKEN: ${{ secrets.PERSONAL_TOKEN }}
          USERNAME: ${{ github.actor }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: APPTOKEN,USERNAME
          script: |
            echo $APPTOKEN | sudo docker login ghcr.io -u $USERNAME --password-stdin
            sudo docker stack deploy \
              -c /opt/${{ github.repository }}/service.yml \
              dokploy-stack-${{ needs.get_next_version.outputs.extract_branch }} \
              --with-registry-auth
